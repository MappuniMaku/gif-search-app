{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/image.service.ts","./src/app/images/images.component.ts","./src/app/images/images.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n\n}\n","<app-images></app-images>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImagesComponent } from './images/images.component';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ImagesComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getGifJSON(tag: string) {\n    const url: string = `https://api.giphy.com/v1/gifs/random?api_key=biXysln47XZ03gvbYk2z9BYMT7eaHT5R&tag=${tag}`\n    return this.http.get(url).pipe(\n      // tap(_ => console.log('GIF загружена успешно')),\n      catchError(this.handleError('getGif', [])),\n    );\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      alert('Произошла http ошибка');\n      return of(result as T);\n    };\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ImageService } from '../image.service';\nimport { Gif } from '../gif';\n\n@Component({\n  selector: 'app-images',\n  templateUrl: './images.component.html',\n  styleUrls: ['./images.component.sass']\n})\nexport class ImagesComponent implements OnInit {\n\n  constructor(private imageService: ImageService) { }\n\n  ngOnInit(): void {\n  }\n\n  userInputTag: string = '';\n  queryInProgress: boolean = false;\n  gifsArray: Gif[] = [];\n  isGrouped: boolean = false;\n  uniqueTagsArray: string[] = [];\n\n  searchTag(): void {\n    if (this.userInputTag) {\n      this.queryInProgress = true;\n      this.getGifJSON(this.userInputTag);\n    } else {\n      alert('Заполните поле \"тег\"');\n    }\n  }\n\n  handleResponse(serverResponse): void {\n    this.queryInProgress = false;\n\n    if(serverResponse.data.image_url) {\n      let gif: Gif = {\n        tag: this.userInputTag,\n        url: serverResponse.data.image_url\n      };\n      this.gifsArray.push(gif);\n\n      if (this.isGrouped) {\n        this.fillUniqueTagsArray();\n      };\n\n    } else {\n      alert('По тегу ничего не найдено');\n    }\n  }\n\n  clear(): void {\n    this.gifsArray = [];\n    this.userInputTag = '';\n    this.uniqueTagsArray = [];\n  }\n\n  groupImages(): void {\n    this.isGrouped = true;\n    this.fillUniqueTagsArray();\n  }\n\n  ungroupImages(): void {\n    this.isGrouped = false;\n    this.uniqueTagsArray = [];\n  }\n\n  fillUniqueTagsArray(): void {\n    for (let gif of this.gifsArray) {\n      if (!this.uniqueTagsArray.includes(gif.tag)) {\n        this.uniqueTagsArray.push(gif.tag);\n      };\n    };\n  }\n\n  getGifJSON(tag: string): void {\n    this.imageService.getGifJSON(tag).subscribe(serverResponse => {\n      this.handleResponse(serverResponse);\n    });\n  }\n}\n","<div class=\"wrapper\">\n    <div class=\"controls\">\n        <input type=\"text\" [(ngModel)]=\"userInputTag\" placeholder=\"Введите тег\" class=\"controls__item controls__input\">\n        <button *ngIf=\"!queryInProgress\" (click)=\"searchTag()\" class=\"controls__item controls__button-load\">Загрузить</button>\n        <button *ngIf=\"queryInProgress\" class=\"controls__item controls__button-load\" disabled>Загрузка...</button>\n        <button (click)=\"clear()\" class=\"controls__item controls__button-clear\">Очистить</button>\n        <button *ngIf=\"!isGrouped\" (click)=\"groupImages()\" class=\"controls__item controls__button-group\">Группировать</button>\n        <button *ngIf=\"isGrouped\" (click)=\"ungroupImages()\" class=\"controls__item controls__button-group\">Разгруппировать</button>\n    </div>\n    \n    <div *ngIf=\"!isGrouped\" class=\"gallery\">\n        <div *ngFor=\"let gif of gifsArray\" class=\"gallery__item\">\n            <img src=\"{{gif.url}}\" class=\"gallery__image\">\n        </div>\n    </div>\n\n    <div *ngFor=\"let tag of uniqueTagsArray\" class=\"gallery gallery_tagged\">\n        <p class=\"gallery__tag-name\">{{ tag }}</p>\n        <div *ngFor=\"let gif of gifsArray\">\n            <div *ngIf=\"gif.tag === tag\" class=\"gallery__item\">\n                <img src=\"{{gif.url}}\" class=\"gallery__image\">\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}